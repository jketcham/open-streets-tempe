name: Deploy to Google Cloud Run and Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Cloud Run and Firebase
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
      attestations: "write"

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Authenticate with Google Cloud
      - name: Set up Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/327348661717/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
          token_format: "access_token"
          access_token_lifetime: "3600s"
          create_credentials_file: true

      # Step 3: Configure gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT }}

      # Step 4: Docker auth
      - name: Docker Auth
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          echo "$(gcloud auth print-access-token)" | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        id: build-push
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT }}/bike-tempe/open-streets-tempe:${{github.sha}}"
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "digest=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE | cut -d'@' -f2)" >> $GITHUB_OUTPUT

      # Step 6: Generate build attestation
      - name: Generate build attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: "us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT }}/bike-tempe/open-streets-tempe"
          subject-digest: ${{ steps.build-push.outputs.digest }}
          push-to-registry: true

      # Step 7: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT }}/bike-tempe/open-streets-tempe:${{github.sha}}"
          gcloud run deploy open-streets-tempe \
            --image=$IMAGE \
            --platform=managed \
            --region=${{ vars.GCP_REGION }} \
            --min-instances=1 \
            --memory=256Mi \
            --allow-unauthenticated \
            --update-env-vars=GA_TRACKING_ID=G-VDDPT9B63T \
            --update-env-vars=NODE_ENV=production

      # Step 8: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 9: Deploy to Firebase
      - name: Deploy to Firebase
        run: |
          firebase use ${{ vars.GCP_PROJECT }} --token "${{ secrets.FIREBASE_TOKEN }}"
          firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
